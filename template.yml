AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''
  # TABLES
  CategoriesTableName:
    Type: String
    Description: The name for categories table in DynamoDB
    Default: 'Categories'
  ItemsTableName:
    Type: String
    Description: The name for items table in DynamoDB
    Default: 'Items'

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
      Role: !Ref CodeDeployRole
    Environment:
      Variables:
        CATEGORIES_TABLE: !Ref CategoriesTableName
        ITEMS_TABLE: !Ref ItemsTableName

Resources:
  # API
  PricelistApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: sheet-pricelist-api
      StageName: !Ref Stage
      EndpointConfiguration: REGIONAL
      Auth:
        AddDefaultAuthorizerToCorsPreflight: False
        ApiKeyRequired: False
  # TABLES
  CategoriesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref CategoriesTableName
  ItemsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref ItemsTableName
  # LAYERS
  Utils:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: utils
      LayerName: layer-utils
      Description: Dependencies and handler common for functions.
      CompatibleRuntimes:
        - python3.7
    Metadata:
      BuildMethod: python3.7 
  # METHODS
  Categories:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-Categories'
      CodeUri: handlers/categories
      Handler: index.handler
      Runtime: python3.7
      Layers:
        - !Ref Utils
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /categories
            Method: get
            RestApiId: !Ref PricelistApi
        PostEvent:
          Type: Api
          Properties:
            Path: /categories
            Method: post
            RestApiId: !Ref PricelistApi
        PutEvent:
          Type: Api
          Properties:
            Path: /categories
            Method: put
            RestApiId: !Ref PricelistApi
        DeleteEvent:
          Type: Api
          Properties:
            Path: /categories
            Method: delete
            RestApiId: !Ref PricelistApi
  Items:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-Items'
      CodeUri: handlers/items
      Handler: index.handler
      Runtime: python3.7
      Layers:
        - !Ref Utils
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /items
            Method: get
            RestApiId: !Ref PricelistApi
        PostEvent:
          Type: Api
          Properties:
            Path: /items
            Method: post
            RestApiId: !Ref PricelistApi
        PutEvent:
          Type: Api
          Properties:
            Path: /items
            Method: put
            RestApiId: !Ref PricelistApi
        DeleteEvent:
          Type: Api
          Properties:
            Path: /items
            Method: delete
            RestApiId: !Ref PricelistApi
  # ROLES
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonDynamoDBFullAccess'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'